name: ci
on: [pull_request, push]
jobs:
  ci:
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:  # macos-13 in Intel, macos-14 is Apple Silicon ARM
        os: [macos-13, macos-14]  #, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install fluidsynth python3-pyaudio portaudio19-dev libasound-dev
      - if: runner.os == 'macOS'
        run: |
          brew install fluid-synth
          echo "LD_LIBRARY_PATH=$(brew --prefix fluid-synth)/lib/" >> $GITHUB_ENV
          echo "DYLD_LIBRARY_PATH=$(brew --prefix fluid-synth)/lib/" >> $GITHUB_ENV
          pip install --global-option='build_ext' \
                      --global-option="-I$(brew --prefix)/include" \
                      --global-option="-L$(brew --prefix)/lib" \
                      pyaudio
      - if: runner.os == 'Windows'
        run: choco install fluidsynth
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: {python-version: 3.x}
      - run: pip install --upgrade pip
      - run: pip install build pytest ruff setuptools  # pyaudio
      - run: ruff check --exit-zero --extend-ignore=E701,E711,F401,F403,F405
                        --output-format=github --target-version=py38 .
      # - run: python -m build
      # - run: ls -R dist/
      # - run: pip install dist/*.whl
      - run: pip install --editable .
      - shell: python  # Always returns {}
        run: |
          import importlib
          import pkgutil
          
          discovered_plugins = {
              name: importlib.import_module(name)
              for finder, name, ispkg
              in pkgutil.iter_modules()
              if name.startswith('flask_')
          }
          print(discovered_plugins)
      # echo "TAG=$(echo git describe --exact-match --tags $(git log -n1 --pretty='%h'))" >> $GITHUB_ENV
      #- env:  # macOS no longer allows modification of LD_LIBRARY_PATH or DYLD_LIBRARY_PATH
      #    LD_LIBRARY_PATH: "$FLUIDSYNTH_LIB_PATH:$LD_LIBRARY_PATH"
      #    DYLD_LIBRARY_PATH: "$FLUIDSYNTH_LIB_PATH:$DYLD_LIBRARY_PATH"
      - run: |
          # echo $(brew --prefix)
          # echo $(brew --prefix fluid-synth)
          # echo $FLUIDSYNTH_LIB_PATH
          # ls $(brew --prefix fluid-synth)
          # ls $FLUIDSYNTH_LIB_PATH
          # echo HOMEBREW_CELLAR: $HOMEBREW_CELLAR
          echo LD_LIBRARY_PATH: $LD_LIBRARY_PATH
          echo DYLD_LIBRARY_PATH: $DYLD_LIBRARY_PATH
          pytest || true
      - run: pytest --doctest-modules || true
